name: node_sync_tests

on:
  workflow_dispatch:
    branches:
      - sync_tests
    inputs:
      build_mode:
        description: how to get the cardano node/cli files - nix, cabal, prebuilt
        required: true
        default: "nix"
#      environment:
#        description: the environment on which to run the sync test - shelley-qa, preview, preprod, mainnet
#        required: true
#        default: "all"
      tag_no1:
        description: rev_label in db/visuals (tags/1.33.0-rc2 (tag number) or 1.33.0 (release number) or 1.33.0_PR2124 (for not released and not tagged runs with a specific node PR/version))
        required: true
        default: "None"
      node_rev1:
        description: desired cardano-node revision (used for initial sync) - cardano-node tag or branch
        required: true
        default: "None"
      node_topology1:
        description: desired cardano-node topology type (used for initial sync) - legacy, p2p
        required: true
        default: "legacy"
      node_start_arguments1:
        description: extra arguments to be used when starting the node using tag_no1 (--a1 --a2 21)
        required: false
        default: "None"
      tag_no2:
        description: rev_label in db/visuals (tags/1.33.0-rc2 (tag number) or 1.33.0 (release number) or 1.33.0_PR2124 (for not released and not tagged runs with a specific node PR/version))
        required: true
        default: "None"
      node_rev2:
        description: desired cardano-node revision (used for final sync) - cardano-node tag or branch
        required: true
        default: "None"
      node_topology2:
        description: desired cardano-node topology type (used for final sync) - legacy, p2p
        required: true
        default: "legacy"
      node_start_arguments2:
        description: extra arguments to be used when starting the node using tag_no2 (--a1 --a2 21)
        required: false
        default: "None"
jobs:
  node_sync_test_mainnet:
    runs-on: ubuntu-latest
    steps:
      - name: trigger the Buildkite pipeline - run sync tests on Mainnet
        env:
          BUILDKITE_API_ACCESS_TOKEN: ${{ secrets.BUILDKITE_API_ACCESS_TOKEN }}
          AWS_DB_USERNAME: ${{ secrets.AWS_DB_USERNAME }}
          AWS_DB_PASS: ${{ secrets.AWS_DB_PASS }}
          AWS_DB_NAME: ${{ secrets.AWS_DB_NAME }}
          AWS_DB_HOSTNAME: ${{ secrets.AWS_DB_HOSTNAME }}
          BLOCKFROST_API_KEY: ${{ secrets.BLOCKFROST_API_KEY }}
        uses: zegocover/buildkite-pipeline-action@master
        with:
          access_token: '${{ secrets.BUILDKITE_API_ACCESS_TOKEN }}'
          pipeline: 'input-output-hk/qa-sync-tests'
          message: ':github: Triggered by GitHub Action'
          env: '{
          "env":"mainnet",
          "build_mode":"${{ github.event.inputs.build_mode }}",
          "node_rev1":"${{ github.event.inputs.node_rev1 }}",
          "node_rev2":"${{ github.event.inputs.node_rev2 }}",          
          "tag_no1":"${{ github.event.inputs.tag_no1 }}",
          "tag_no2":"${{ github.event.inputs.tag_no2 }}",
          "node_topology1":"${{ github.event.inputs.node_topology1 }}",
          "node_topology2":"${{ github.event.inputs.node_topology2 }}",
          "node_start_arguments1":"${{ github.event.inputs.node_start_arguments1 }}",
          "node_start_arguments2":"${{ github.event.inputs.node_start_arguments2 }}",
          
          "BLOCKFROST_API_KEY":"${{ secrets.BLOCKFROST_API_KEY }}",
          "AWS_DB_USERNAME":"${{ secrets.AWS_DB_USERNAME }}",
          "AWS_DB_PASS":"${{ secrets.AWS_DB_PASS }}",
          "AWS_DB_NAME":"${{ secrets.AWS_DB_NAME }}",
          "AWS_DB_HOSTNAME":"${{ secrets.AWS_DB_HOSTNAME }}"
          }'
          branch: 'sync_tests'
  node_sync_test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        env: [shelley-qa, preview, preprod]
        branch:
          - sync_tests
      fail-fast: false
    runs-on: ${{ matrix.os }}
    timeout-minutes: 600
    steps:
      - name: checkout cardano-node-tests repo
        uses: actions/checkout@v2
        with:
          path: cardano_node_tests
          ref: sync_tests
      - name: run actions/setup-python@v2
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: install dependencies
        run: |
          pip install pymysql
          pip install requests
          pip install psutil
          pip install pandas
          pip install blockfrost-python
          pip install GitPython
      - name: run sync test
        env:
          BLOCKFROST_API_KEY: ${{ secrets.BLOCKFROST_API_KEY }}
        run: |
          cd cardano_node_tests
          echo "current branch2: $(git branch --show-current)"
          python sync_tests/node_sync_test.py -t1 "${{ github.event.inputs.tag_no1 }}" -t2 "${{ github.event.inputs.tag_no2 }}" -e1 "${{ github.event.inputs.hydra_eval_no1 }}" -e2 "${{ github.event.inputs.hydra_eval_no2 }}" -e ${{ matrix.env }} -a1="${{ github.event.inputs.node_start_arguments1 }}" -a2="${{ github.event.inputs.node_start_arguments2 }}"
      - name: write the test results into the database
        env:
          AWS_DB_USERNAME: ${{ secrets.AWS_DB_USERNAME }}
          AWS_DB_PASS: ${{ secrets.AWS_DB_PASS }}
          AWS_DB_NAME: ${{ secrets.AWS_DB_NAME }}
          AWS_DB_HOSTNAME: ${{ secrets.AWS_DB_HOSTNAME }}
          BLOCKFROST_API_KEY: ${{ secrets.BLOCKFROST_API_KEY }}
        run: |
          cd cardano_node_tests
          echo "current branch3: $(git branch --show-current)"
          python sync_tests/node_write_sync_values_to_db.py -e ${{ matrix.env }}
      - name: generate artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: node_logs_${{ matrix.env }}_${{ matrix.os }}
          path: |
            cardano_node_tests/logfile.log
            cardano_node_tests/sync_results.json
            cardano_node_tests/${{ matrix.env }}-config.json
            cardano_node_tests/${{ matrix.env }}-topology.json
